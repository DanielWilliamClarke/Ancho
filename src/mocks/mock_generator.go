// Code generated by MockGen. DO NOT EDIT.
// Source: ./deveui/generator.go

// Package mock_deveui is a generated GoMock package.
package mock_deveui

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDevEUIGenerator is a mock of IDevEUIGenerator interface
type MockIDevEUIGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockIDevEUIGeneratorMockRecorder
}

// MockIDevEUIGeneratorMockRecorder is the mock recorder for MockIDevEUIGenerator
type MockIDevEUIGeneratorMockRecorder struct {
	mock *MockIDevEUIGenerator
}

// NewMockIDevEUIGenerator creates a new mock instance
func NewMockIDevEUIGenerator(ctrl *gomock.Controller) *MockIDevEUIGenerator {
	mock := &MockIDevEUIGenerator{ctrl: ctrl}
	mock.recorder = &MockIDevEUIGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDevEUIGenerator) EXPECT() *MockIDevEUIGeneratorMockRecorder {
	return m.recorder
}

// GenerateDevEUI mocks base method
func (m *MockIDevEUIGenerator) GenerateDevEUI(length int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateDevEUI", length)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateDevEUI indicates an expected call of GenerateDevEUI
func (mr *MockIDevEUIGeneratorMockRecorder) GenerateDevEUI(length interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateDevEUI", reflect.TypeOf((*MockIDevEUIGenerator)(nil).GenerateDevEUI), length)
}
