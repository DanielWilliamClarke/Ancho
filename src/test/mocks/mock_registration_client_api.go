// Code generated by MockGen. DO NOT EDIT.
// Source: ./deveui/registration_client_api.go

// Package mock_deveui is a generated GoMock package.
package mock_deveui

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIRegistrationClientAPI is a mock of IRegistrationClientAPI interface
type MockIRegistrationClientAPI struct {
	ctrl     *gomock.Controller
	recorder *MockIRegistrationClientAPIMockRecorder
}

// MockIRegistrationClientAPIMockRecorder is the mock recorder for MockIRegistrationClientAPI
type MockIRegistrationClientAPIMockRecorder struct {
	mock *MockIRegistrationClientAPI
}

// NewMockIRegistrationClientAPI creates a new mock instance
func NewMockIRegistrationClientAPI(ctrl *gomock.Controller) *MockIRegistrationClientAPI {
	mock := &MockIRegistrationClientAPI{ctrl: ctrl}
	mock.recorder = &MockIRegistrationClientAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRegistrationClientAPI) EXPECT() *MockIRegistrationClientAPIMockRecorder {
	return m.recorder
}

// Register mocks base method
func (m *MockIRegistrationClientAPI) Register(devEUI string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", devEUI)
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register
func (mr *MockIRegistrationClientAPIMockRecorder) Register(devEUI interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockIRegistrationClientAPI)(nil).Register), devEUI)
}
